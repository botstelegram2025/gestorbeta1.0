# Configurações do Bot Telegram - Gestão de Clientes

# === CONFIGURAÇÕES OBRIGATÓRIAS ===

# Token do bot Telegram
BOT_TOKEN=

# ID do chat do administrador
ADMIN_CHAT_ID=

# Host do PostgreSQL
PGHOST=localhost

# Nome do banco PostgreSQL
PGDATABASE=bot_clientes

# Usuário do PostgreSQL
PGUSER=postgres

# Senha do PostgreSQL
PGPASSWORD=

# Porta do PostgreSQL (padrão: 5432)
PGPORT=5432

# === CONFIGURAÇÕES OPCIONAIS ===

# Telefone do administrador para testes
ADMIN_PHONE=

# URL da API Baileys (padrão: http://localhost:3000)
BAILEYS_API_URL=http://localhost:3000

# Chave da API Baileys
BAILEYS_API_KEY=

# Nome da sessão Baileys (padrão: bot_clientes)
BAILEYS_SESSION=bot_clientes

# Timeout para requests Baileys em segundos (padrão: 30)
BAILEYS_TIMEOUT=30

# Máximo de tentativas para requests Baileys (padrão: 3)
BAILEYS_MAX_RETRIES=3

# Delay entre mensagens em segundos (padrão: 2)
BAILEYS_MESSAGE_DELAY=2

# Auto-reconectar Baileys (padrão: true)
BAILEYS_AUTO_RECONNECT=true

# === CONFIGURAÇÕES DA EMPRESA ===

# Nome da empresa
EMPRESA_NOME=

# Telefone da empresa
EMPRESA_TELEFONE=

# Email da empresa
EMPRESA_EMAIL=

# Site da empresa
EMPRESA_SITE=

# Endereço da empresa
EMPRESA_ENDERECO=

# === CONFIGURAÇÕES PIX ===

# Chave PIX para recebimentos
PIX_CHAVE=

# Nome do beneficiário PIX
PIX_BENEFICIARIO=

# Banco da conta PIX
PIX_BANCO=

# Agência da conta PIX
PIX_AGENCIA=

# Número da conta PIX
PIX_CONTA=

# === MERCADO PAGO (NECESSÁRIO PARA SISTEMA MULTI-USUÁRIO) ===

# Token de acesso do Mercado Pago para pagamentos PIX
# Obtenha em: https://www.mercadopago.com.br/developers/panel/app
MERCADOPAGO_ACCESS_TOKEN=

# === CONFIGURAÇÕES DE SUPORTE ===

# Telefone de suporte
SUPORTE_TELEFONE=

# Email de suporte
SUPORTE_EMAIL=

# WhatsApp de suporte
SUPORTE_WHATSAPP=

# Horário de atendimento
SUPORTE_HORARIO=Segunda a Sexta, 9h às 18h

# === CONFIGURAÇÕES DO SISTEMA ===

# Nível de log (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Timezone do sistema (padrão: America/Sao_Paulo)
TIMEZONE=America/Sao_Paulo

# Modo debug (true/false)
DEBUG_MODE=false

# Modo manutenção (true/false)
MAINTENANCE_MODE=false

# Ambiente (development/production)
ENVIRONMENT=development

# === CONFIGURAÇÕES DE BACKUP ===

# Habilitar backup automático (true/false)
BACKUP_ENABLED=true

# Intervalo de backup em horas (padrão: 24)
BACKUP_INTERVAL_HOURS=24

# === CONFIGURAÇÕES DE WEBHOOK (OPCIONAL) ===

# URL do webhook para receber atualizações
WEBHOOK_URL=

# Porta para webhook (padrão: 8443)
WEBHOOK_PORT=8443

# === CONFIGURAÇÕES AVANÇADAS ===

# Pool de conexões do banco
DATABASE_POOL_SIZE=10

# Timeout de conexão do banco em segundos
DATABASE_TIMEOUT=30

# Usar SSL para conexão com banco (true/false)
DATABASE_SSL=false

# Máximo de conexões simultâneas
MAX_CONNECTIONS=100

# Cache TTL em segundos (padrão: 300)
CACHE_TTL=300

# === INSTRUÇÕES ===
#
# 1. Copie este arquivo para .env
# 2. Preencha pelo menos as configurações obrigatórias
# 3. Configure sua instância PostgreSQL
# 4. Obtenha o token do bot no @BotFather
# 5. Configure sua API Baileys se disponível
# 6. Inicie o bot com: python main.py
#
# Para obter o ADMIN_CHAT_ID:
# 1. Inicie o bot
# 2. Envie uma mensagem para ele
# 3. Acesse: https://api.telegram.org/bot<SEU_TOKEN>/getUpdates
# 4. Encontre o "chat":{"id": número} na resposta
#
# Para configurar PostgreSQL localmente:
# 1. Instale PostgreSQL
# 2. Crie um banco de dados: CREATE DATABASE bot_clientes;
# 3. Configure usuário e senha
# 4. Preencha as variáveis PGHOST, PGDATABASE, PGUSER, PGPASSWORD
#
# Para usar Baileys API:
# 1. Configure uma instância Baileys
# 2. Obtenha a URL da API
# 3. Configure BAILEYS_API_URL e opcionalmente BAILEYS_API_KEY
#
# === SEGURANÇA ===
# - Nunca compartilhe este arquivo com dados preenchidos
# - Use variáveis de ambiente em produção
# - Mantenha tokens e senhas seguros
# - Configure firewall apropriado para PostgreSQL

